# for color
export CLICOLOR=1
export PS1='\[\033[01;33m\]\u@\h\[\033[01;31m\] \w\$\[\033[00m\] '
export FZF_DEFAULT_COMMAND='rg --files --hidden --follow --glob "!.git/*"'
export FZF_DEFAULT_OPTS='--bind alt-up:preview-up,alt-down:preview-down,alt-k:page-up,alt-j:page-down,alt-left:preview-page-up,alt-right:preview-page-down'

alias ls='ls --color=auto'
alias ll='ls -lh'
alias la='ls -ah'
alias lla='ls -lah'
alias vi='vim -u <(echo source /etc/vim/vimrc.tiny; cat ~/.vim/vimrc.minimal)'
# 如果使用 neovim，则需要将 -u 参数修改为：`<(echo "set runtimepath^=~/.vim runtimepath+=~/.vim/after"; cat ~/.vim/vimrc.featured)`
alias nvim='PATH=~/bins/node/bin:$PATH vim -u <(echo source /etc/vim/vimrc; cat ~/.vim/vimrc.featured)'

function my-addpath {
	if [ $# -eq 0 ]; then
		export PATH=`pwd`:$PATH
		echo "Added \"`pwd`\" to \$PATH"
	else
		# do validation on arguments
		for i in $@; do
			# In linux, we can just use `realpath` command to get the absolute path
			# of a file, but this command is not exist on Mac OS X, so use the python
			# version instead.
			local candidate_path=`python3 -c "import os; print(os.path.realpath('$i'))"`
			if [ ! -d $candidate_path ]; then
				echo "Error: \"$i\" seems not a valid path"
				return 1
			fi
		done

		for i in $@; do
			local candidate_path=`python3 -c "import os; print(os.path.realpath('$i'))"`
			export PATH=$candidate_path:$PATH
			echo "Added \"$candidate_path\" to \$PATH"
		done
	fi
	return 0
}

my-proxy-on() {
	export http_proxy=http://127.0.0.1:7890
	export https_proxy=http://127.0.0.1:7890
}

my-proxy-off() {
	unset http_proxy
	unset https_proxy
}

export EDITOR=vim
# export PATH=~/bins/default/bin/:$PATH
case ":$PATH:" in
	*":$HOME/bins/default/bin/:"*) :;; # already there
	*) PATH="$HOME/bins/default/bin/:$PATH";; # or PATH="$PATH:$new_entry"
esac
